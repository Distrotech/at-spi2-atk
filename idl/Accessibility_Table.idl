/* 
 * AT-SPI - Assistive Technology Service Provider Interface 
 * (Gnome Accessibility Project; http://developer.gnome.org/projects/gap)
 *
 * Copyright 2001 Sun Microsystems, Inc.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */

#include <Accessibility_Accessible.idl>

module Accessibility {

typedef sequence<long> LongSeq;

 interface Table : Bonobo::Unknown {
   readonly attribute long nRows;
   readonly attribute long nColumns;
   readonly attribute Accessible caption;
   readonly attribute Accessible summary;
   readonly attribute long nSelectedRows;
   readonly attribute long nSelectedColumns;

   Accessible getAccessibleAt (in long row, in long column);
   long getIndexAt (in long row, in long column);
   long getRowAtIndex (in long index);
   long getColumnAtIndex (in long index);
   string getRowDescription (in long row);
   string getColumnDescription (in long column);
   long getRowExtentAt (in long row, in long column);
   long getColumnExtentAt (in long row, in long column);
   Accessible getRowHeader (in long row);
   Accessible getColumnHeader (in long column);
   LongSeq getSelectedRows ();
   LongSeq getSelectedColumns ();
   boolean isRowSelected (in long row);
   boolean isColumnSelected (in long column);
   boolean isSelected (in long row, in long column);
   boolean addRowSelection (in long row);
   boolean addColumnSelection (in long column);
   boolean removeRowSelection (in long row);
   boolean removeColumnSelection (in long column);
    /**
     * unImplemented:
     *
     * placeholders for future expansion.
     */
    void unImplemented ();
    void unImplemented2 ();
    void unImplemented3 ();
    void unImplemented4 ();
    void unImplemented5 ();
    void unImplemented6 ();
    void unImplemented7 ();
    void unImplemented8 ();
  };
};
