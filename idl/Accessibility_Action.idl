/* 
 * AT-SPI - Assistive Technology Service Provider Interface 
 * (Gnome Accessibility Project; http://developer.gnome.org/projects/gap)
 *
 * Copyright 2001 Sun Microsystems, Inc.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */

module Accessibility {

  interface Action : Bonobo::Unknown {

    /**
     * nActions: a @long containing the number of actions this object supports.
     * 
     **/
    readonly attribute long nActions;

    /**
     * getDescription:
     * @index: an %in parameter specifying the index of the action 
     *   for which a description is desired.
     *
     * Gets the description of the specified action.
     *
     * Returns: a @wstring containing the description of the specified action.
     *
     **/
    string getDescription (in long index);

    /**
     * getName:
     * @index: an %in parameter specifying the index of the action 
     *   whose name is requested.
     *
     * Gets the name of the specified action.
     *
     * Returns: a @string containing the name of the specified action.
     *
     **/
    string getName (in long index);

    /**
     * doAction:
     * @index: an %in parameter specifying the 0-based index of the action to perform.
     *
     * Causes the object to perform the specified action.
     *
     * Returns: a @boolean indicating success or failure.
     *
     **/
    boolean doAction (in long index);

    /**
     * getKeyBinding:
     * @index: an %in parameter specifying the 0-based index of the action 
     *   for which a key binding is requested.
     *
     * Gets the key binding associated with a specific action.
     *
     * Returns: a @string containing the key binding for the specified action,
     *   "" if none exists.
     **/
    string getKeyBinding (in long index);

    /**
     * unImplemented:
     *
     * placeholders for future expansion.
     */
    void unImplemented ();
    void unImplemented2 ();
  };
};

