(top)
in HEAD:
What's new in at-spi-1.1.8:

* Added getRangeExtents() and getBoundedRanges() API for more
  efficient screen review [100944].

What's new in at-spi-1.1.7:

* Added spi_keymask values for Mod4 and Mod5.
* Performance improvements and bugfixes from Michael.

What's new in at-spi-1.1.6:

* Fixes for #99799, #10530.

* New methods in cspi:
  'AccessibleEvent_ref' and 'AccessibleEvent_unref'
  to allow lifecycle management of AccessibleEvents outside of
  the emission handler.

What's new in at-spi-1.1.6:

* event struct in libspi is bigger, increased unimplemented
  slot count for sufficient future bincompatible expansion. 
 (WARNING: breaks bincompat for direct CORBA clients. CSPI clients
  not affected.)

* New accessor methods allow state-coherent query of many
  event types.

* API Frozen for GNOME 2.2.

* New role types: APPLICATION, HEADER, FOOTER, PARAGRAPH, RULER.

* New relations, FLOWS_FROM, FLOWS_TO, EMBEDS, EMBEDDED_BY,
	SUBWINDOW_OF.

* New state, MANAGES_DESCENDANTS.  New event, "active-descendant-changed".

* reduced debug output, unless you set AT_SPI_DEBUG environment
  variable to string which parses to an integer value > 0.

* added definitions for SPI_KEYMASK_BUTTON1, etc.

* added SPI_LAYER_WINDOW.

* Added ability to register 'device event listeners' which can
  consume device events, such as mouse events.

* Added support for mouse and key-modifier event notification.

* deprecated KeyEventType in favor of EventType.

* bugfixes for >50 bugs including: 98836, 98842, 97916, 95828, 
	93592, 95940, 95517, 93658, 95055, 94555, 84856.

* updated copyrights to include Ximian.

What's new in at-spi-1.1.0:

* event listener notifications are no longer oneways.
* bugfixes for 84900, 84908, 84897, 84898.
* performance improvement for event listeners.

What's new in at-spi-1.0.1:

* bugfix for 82509

What's new in at-spi-1.0.0:

* API Freeze (1.0 API is now FINAL)
* added boolean return for
Accessibility_Registry_registerKeystrokeListener.
* Revved activation ID for registry to "1.0"
* many bugfixes and improvements to global key listener implementation.
* improvements to regression test "test-simple", added key
listener/synthesis test.
* added sample code in "test" to demonstrate how flat line-mode
screen-review can be implemented with at-spi.

What's new in at-spi-0.13.1:

(note: 0.13.1 is not binary compatible with 0.12.1, clients will need
 to recompile )

* fix for bugzilla bug 80616
* IDL change which will affect direct CORBA users of the keystroke
  listener API
* added a new test harness, event-listener-test, which also
  has a simple tree traversal timing benchmark. event-listener-test
  attaches listeners to all currently supported events (and a few
  events which are not fully implemented yet); it thus serves
  as useful event listener sample code as well as being a diagnostic
  tool. 

What's new in at-spi-0.12.1:

* fixes for bugzilla bugs 78249,68929,76615,71686,72300,78247,72300,78249
  relating to build issues on some architectures (some of these were
  fixed in 0.10 but additional fixes were included in 0.12.1).
* added new test program for our key listener API.
* added implementation of IDL 'exit' method to our
  magnifier and mag_control client.
* Badly broken AccessibleStateSet implementation fixed by
  Marc.
* Added implementation for AccessibleComponent_grabFocus method.
* Improvements to documentation.

API CHANGES:

* Added missing seek_type param in
  AccessibleStreamableContent_seek [78888], 
  previously documented but not in signature;
  this was unused API but needed fixing for the future.

* Added API for AccessibleTable_selectRow and _selectColumn,
  corresponding to similar API in ATK, and provided
  implementation. [76201]

* Added boolean return types to a number of IDL methods whose
  corresponding cspi wrappers and ATK methods already had boolean
  returns.

* Made Accessibility_StateSet inherit from BonoboUnknown as it should;
this was the main existing breakage in StateSet.


=================


TODO API Additions:

getStateName () and STATE_EXTENDED to allow extension of State API (already 
in ATK).

AccessibleAction_getType () and AccessibleAction_getTypeName ().

need getBaseAttributes () 
for AccessibleText (available in ATK I think).

table: getVisibleRange

state: HEADER, etc. for spreadsheet cells


