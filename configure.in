AC_INIT(idl/Accessibility.idl)

AT_SPI_MAJOR_VERSION=0
AT_SPI_MINOR_VERSION=0
AT_SPI_MICRO_VERSION=8
AT_SPI_INTERFACE_AGE=0
AT_SPI_BINARY_AGE=0
AT_SPI_VERSION="$AT_SPI_MAJOR_VERSION.$AT_SPI_MINOR_VERSION.$AT_SPI_MICRO_VERSION"
AM_INIT_AUTOMAKE(at-spi, $AT_SPI_VERSION)
AC_SUBST(AT_SPI_MAJOR_VERSION)
AC_SUBST(AT_SPI_MINOR_VERSION)
AC_SUBST(AT_SPI_MICRO_VERSION)
AC_SUBST(AT_SPI_INTERFACE_AGE)
AC_SUBST(AT_SPI_BINARY_AGE)

# libtool versioning
LT_RELEASE=$AT_SPI_MAJOR_VERSION.$AT_SPI_MINOR_VERSION
LT_CURRENT=`expr $AT_SPI_MICRO_VERSION - $AT_SPI_INTERFACE_AGE`
LT_REVISION=$AT_SPI_INTERFACE_AGE
LT_AGE=`expr $AT_SPI_BINARY_AGE - $AT_SPI_INTERFACE_AGE`
LT_VERSION_INFO='-version-info ${LT_CURRENT}:${LT_REVISION}:${LT_AGE}'
AC_SUBST(LT_VERSION_INFO)
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

dnl Specify a header configuration file
AM_CONFIG_HEADER(config.h)

dnl Initialize maintainer mode
AM_MAINTAINER_MODE

AC_PROG_INTLTOOL

dnl Checks for programs
AC_PROG_CC
AC_PROG_INSTALL
AC_ISC_POSIX

GNOME_COMMON_INIT
GNOME_PLATFORM_GNOME_2(yes, force)
GNOME_COMPILE_WARNINGS(maximum)

dnl Initialize libtool
AM_DISABLE_STATIC
AM_PROG_LIBTOOL

dnl internationalization support
dnl ALL_LINGUAS=""
dnl AM_GLIB_GNU_GETTEXT

AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)

gtk_doc_min_version=0.6
if $GTKDOC ; then
    gtk_doc_version=`gtkdoc-mkdb --version`
    AC_MSG_CHECKING([gtk-doc version ($gtk_doc_version) >= $gtk_doc_min_version])
    if perl <<EOF ; then
	exit (("$gtk_doc_version" =~ /^[[0-9]]+\.[[0-9]]+$/) &&
            ("$gtk_doc_version" >= "$gtk_doc_min_version") ? 0 : 1);
EOF
      AC_MSG_RESULT(yes)
   else
      AC_MSG_RESULT(no)
	GTKDOC=false
   fi
fi

dnl Let people disable the gtk-doc stuff.
AC_ARG_ENABLE(gtk-doc, [  --enable-gtk-doc  Use gtk-doc to build documentation [default=auto]], enable_gtk_doc="$enableval", enable_gtk_doc=auto)

if test x$enable_gtk_doc = xauto ; then
  if test x$GTKDOC = xtrue ; then
    enable_gtk_doc=yes
  else
    enable_gtk_doc=no
  fi
fi

dnl NOTE: We need to use a separate automake conditional for this
dnl   	  to make this work with the tarballs.
AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)

AC_PATH_XTRA

if test x$no_x = xyes ; then
  AC_MSG_ERROR([X development libraries not found])
else
  X_LIBS="$X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS"
fi

AC_SUBST(X_LIBS)

dnl Checks for libraries
PKG_CHECK_MODULES(LIBSPI, \
	libbonobo-2.0 >= 1.107.0 \
	atk >= 0.10 \
	gtk+-2.0 >= 1.3.12 \
	gail >= 0.6)
AC_SUBST(LIBSPI_LIBS)
AC_SUBST(LIBSPI_CFLAGS)

PKG_CHECK_MODULES(REGISTRYD, \
	libbonobo-2.0 >= 1.107.0 \
	gtk+-2.0 \
	atk >= 0.10)
AC_SUBST(REGISTRYD_LIBS)
AC_SUBST(REGISTRYD_CFLAGS)

PKG_CHECK_MODULES(TESTS, \
	libbonobo-2.0 >= 1.107.0 \
	atk >= 0.10 \
	gtk+-2.0 >= 1.3.12 \
	gail >= 0.6)
AC_SUBST(TESTS_LIBS)
AC_SUBST(TESTS_CFLAGS)

PKG_CHECK_MODULES(UTILS, \
	libbonobo-2.0 >= 1.107.0 \
	gtk+-2.0 >= 1.3.12 \
	gdk-pixbuf-2.0 >= 1.3.0
	gdk-pixbuf-xlib-2.0 >= 1.3.0)
AC_SUBST(UTILS_LIBS)
AC_SUBST(UTILS_CFLAGS)

PKG_CHECK_MODULES(ATK_BRIDGE, \
	libbonobo-2.0 >= 1.107.0 \
	atk >= 0.10)
AC_SUBST(ATK_BRIDGE_LIBS)
AC_SUBST(ATK_BRIDGE_CFLAGS)

PKG_CHECK_MODULES(LIBCSPI, \
	libbonobo-2.0 >= 1.107.0 \
	atk >= 0.10)
AC_SUBST(LIBCSPI_LIBS)
AC_SUBST(LIBCSPI_CFLAGS)

dnl orbit-idl.
ORBIT_IDL="`$PKG_CONFIG --variable=orbit_idl ORBit-2.0`"
AC_SUBST(ORBIT_IDL)

dnl Bonobo and Bonobo-Activation idl files
BONOBO_ACTIVATION_IDL_DIR="`$PKG_CONFIG --variable=idldir bonobo-activation-2.0`"
LIBBONOBO_IDL_DIR="`$PKG_CONFIG --variable=idldir libbonobo-2.0`"
AC_SUBST(BONOBO_ACTIVATION_IDL_DIR)
AC_SUBST(LIBBONOBO_IDL_DIR)

dnl path to Xtst
AC_CHECK_LIB(Xtst, XTestFakeKeyEvent, XTST_LIBS=-lXtst)
if test "x$XTST_LIBS" = x; then
  save_LIBS="$LIBS"
  for xtstpath in /usr/X11R6/lib /usr/openwin/lib; do
    LIBS="-L$xtstpath -lXtst"
    AC_MSG_CHECKING(for -lXtst in $xtstpath)
    AC_TRY_LINK([], [XTestFakeKeyEvent()], [
	AC_MSG_RESULT(yes)
	XTST_LIBS="-L$xtstpath -lXtst"
        LIBS="$save_LIBS"
	break],[AC_MSG_RESULT(no)])
  done
  if test "x$XTST_LIBS" = x; then
    AC_MSG_ERROR(Couldn't find the Xtst library. Check config.log for details)
  fi
fi
AC_SUBST(XTST_LIBS)

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

AC_CHECK_LIB(popt, poptDupArgv,,
AC_MSG_ERROR([You must have popt 1.5 or greater to compile the utilities.]))

AC_OUTPUT([
Makefile
libspi-1.0.pc
cspi-1.0.pc
docs/Makefile
docs/reference/Makefile
docs/reference/cspi/Makefile
idl/Makefile
libspi/Makefile
registryd/Makefile
registryd/Accessibility_Registry.server
atk-bridge/Makefile
test/Makefile
cspi/Makefile
cspi/bonobo/Makefile
util/Makefile
util/Accessibility_Util.server
])

echo "AT-SPI setup:

	Source code location:	${srcdir}
	Compiler:		${CC} 
	Prefix:			${prefix}

	Welcome to the wonderful world of Accessibility.
	   http://developer.gnome.org/projects/gap/
"
